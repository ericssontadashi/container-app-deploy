name: "Shared release to app container"

on:
  workflow_call:
    inputs:
      env:
        required: true
        type: string
      app_image_tag:
        type: string
        description: docker tag for app image
      az_app_container_name:
        type: string
        description: app container name
      az_app_container_environment:
        type: string
        description: app container environment name
      az_app_container_region:
        type: string
        description: app container region
      az_app_container_resource_group:
        type: string
        description: app container resource group name
      migrations_image_tag:
        required: false
        type: string
        description: docker tag for migrations image

jobs:
  release:
    runs-on: ubuntu-latest
    environment: ${{ inputs.env }}
    permissions:
      id-token: write
      contents: read
    env:
      registry: ghcr.io

    steps:
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZ_CREDENTIALS }}

      # Migrations
      - name: Migrations
        if: ${{ inputs.migrations_image_tag != null && inputs.migrations_image_tag != '' }}
        run: |
          echo Update migrations container app
          az containerapp job update -n migrations -g ${{ inputs.az_app_container_resource_group }} --image ${{ inputs.migrations_image_tag }} --replica-timeout 1800

          echo Run database migrations
          job_output=$(az containerapp job start -n migrations --resource-group  ${{ inputs.az_app_container_resource_group }} )
          job_id=$(echo $job_output | jq -r '.id' | awk -F'/' '{print $NF}')
          echo "Job ID: $job_id"
          if [ -z "$job_id" ]; then
            return 1
          fi
          
          counter=0
          max_retries=10

          echo Validating job execution
          while [ $counter -lt $max_retries ]; do
            job_status_output=$(az containerapp job execution show -n migrations --resource-group ${{ inputs.az_app_container_resource_group }} --job-execution-name $job_id)
            job_status=$(echo $job_status_output | jq -r '.properties.status')
            echo "Job Status: $job_status"

            if [ "$job_status" == "Running" ] || [ "$job_status" == "Unknown" ]; then
              echo "Failed to start job. Attempt $((counter + 1)) of $max_retries."
              counter=$((counter + 1))
              # Wait for 5 seconds before retrying
              sleep 5
            elif [ "$job_status" != "Succeeded" ]; then
              echo "Failed to start job."
              exit 1
            else 
              echo "Job started successfully."
              exit 0
            fi
          done
      
      # App          
      - name: Build and deploy Container App
        uses: azure/container-apps-deploy-action@v1
        with:
          imageToDeploy: ${{ inputs.app_image_tag }}
          containerAppName: ${{ inputs.az_app_container_name }}
          containerAppEnvironment: ${{ inputs.az_app_container_environment }}
          location: ${{ inputs.az_app_container_region }}
          resourceGroup: ${{ inputs.az_app_container_resource_group }}
          registryUrl: ${{ env.registry }}
          registryUsername: ${{ github.actor }}
          registryPassword: ${{ secrets.CR_PAT }}

#For AZ_CREDENTIALS: https://learn.microsoft.com/en-us/azure/container-apps/github-actions#configure-secrets-in-your-github-repository
